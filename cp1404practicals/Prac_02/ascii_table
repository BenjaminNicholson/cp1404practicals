MAX_COLUMNS = 10
MIN_COLUMNS = 2

LOWER = 33
UPPER = 127


def main():
    translate_character()
    translate_number()
    single_column()
    print("Version 1: Horizontal then vertical ordering")
    multiple_column()
    print("Version 2: Vertical then horizontal ordering\n")


def translate_character():
    get_letter = input("Enter a character :")
    print("The ASCII code for {} is {}".format(get_letter, ord(get_letter)))


def translate_number():
    number = int(input("Enter a number between 33 and 127: "))
    while number < LOWER or number > UPPER:
        print("Sorry that is out of range, try again: ")
        number = int(input("Enter a number between 33 and 127: "))
    print("The character for {} is {}".format(number, chr(number)))


def single_column():
    for value in range(LOWER, UPPER + 1):
        print("{:3} {:>4}".format(value, chr(value)))


def multiple_column():
    columns = int(input("Enter number of columns: "))
    while columns < MIN_COLUMNS or columns > MAX_COLUMNS:
        print("Please enter a number between {} and {}".format(MIN_COLUMNS, MAX_COLUMNS))
        columns = int(input("Enter number of columns: "))
    number_of_values = UPPER - LOWER + 1
    rows = number_of_values // columns
    value = LOWER
    for row in range(rows):
        for column in range(columns):
            print("{:6} {:>2}".format(value, chr(value)), end=" ")
            value += 1
        print()

    for row in range(rows + 1):
        starting_value = LOWER + row
        value = starting_value

        for column in range(columns + 1):
            value_to_print = value + (column * row)
            print("{:6} {:>2}".format(value_to_print, chr(value_to_print)), end="")
            value += 1
        value_to_print = value + ((column + 1) * rows)
        if value_to_print <= UPPER:
            print("{:6} {:>2}".format(value_to_print, chr(value_to_print)), end="")
        print()


main()


